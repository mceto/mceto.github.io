<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>mceto</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.mceto.com/"/>
  <updated>2018-12-26T06:21:16.712Z</updated>
  <id>http://blog.mceto.com/</id>
  
  <author>
    <name>mceto</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker的UI管理工具--portainer</title>
    <link href="http://blog.mceto.com/2018/12/25/portainer/"/>
    <id>http://blog.mceto.com/2018/12/25/portainer/</id>
    <published>2018-12-25T13:53:34.000Z</published>
    <updated>2018-12-26T06:21:16.712Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://raw.githubusercontent.com/mceto/blog/master/banner/banner20181225.png" alt=""></p><p>前段时间接触了docker容器，功能确实很强大，给开发者和运维带来了极大的便利，祝Docker越来越火。</p><p>👉👉👉<a href="http://www.runoob.com/docker/docker-tutorial.html" target="_blank" rel="noopener">Docker教程</a></p><p>之后，搜到了docker的UI管理工具–portainer，功能更是强大，页面也非常美观。</p><a id="more"></a><p>👉👉👉<a href="https://www.portainer.io/installation/" target="_blank" rel="noopener">官方安装运行文档</a></p><p>安装完之后进入管理页面</p><p>看到下面的界面就可以愉快的玩耍啦</p><p><img src="https://raw.githubusercontent.com/mceto/blog/master/img/portainer-1.png" alt=""></p><p><img src="https://raw.githubusercontent.com/mceto/blog/master/img/portainer-2.png" alt=""></p><p>更多的功能还在慢慢挖掘中。</p><p>顺便再安利一个做banner图的网站:fotor，我这blog里的banner图就是在fotor制作的，效果还不错，还有各种在线模板，不用安装ps都可以快速的制作一个banner图😁😁😁</p><p>👉👉👉<a href="https://www.fotor.com.cn/" target="_blank" rel="noopener">网站入口</a></p><p>制图界面</p><p><img src="https://raw.githubusercontent.com/mceto/blog/master/img/fotor.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mceto/blog/master/banner/banner20181225.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;前段时间接触了docker容器，功能确实很强大，给开发者和运维带来了极大的便利，祝Docker越来越火。&lt;/p&gt;
&lt;p&gt;👉👉👉&lt;a href=&quot;http://www.runoob.com/docker/docker-tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Docker教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;之后，搜到了docker的UI管理工具–portainer，功能更是强大，页面也非常美观。&lt;/p&gt;
    
    </summary>
    
      <category term="word" scheme="http://blog.mceto.com/categories/word/"/>
    
    
      <category term="docker" scheme="http://blog.mceto.com/tags/docker/"/>
    
      <category term="tool" scheme="http://blog.mceto.com/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>HexoClient</title>
    <link href="http://blog.mceto.com/2018/12/22/hexoclient/"/>
    <id>http://blog.mceto.com/2018/12/22/hexoclient/</id>
    <published>2018-12-22T12:33:57.000Z</published>
    <updated>2018-12-22T12:54:34.139Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://raw.githubusercontent.com/mceto/blog/master/banner/banner20181222.png" alt=""></p><p>添加了一个分类：word,做一个关键词分享。</p><p>本地整理了很多，大多数都是从别处摘抄的。。。就添加这个分类，根据一个关键词，记一些日常生活中比较实用的东西。</p><p>以后有原创的东西会第一时间发布在自己的博客上。<br><a id="more"></a><br>第一个就分享一下前段时间发现的hexo客户端工具:<strong>HexoClient</strong></p><p>GitHub地址:<a href="https://github.com/gaoyoubo/hexo-client" target="_blank" rel="noopener">https://github.com/gaoyoubo/hexo-client</a><br>开发者博客:<a href="https://www.mspring.org/" target="_blank" rel="noopener">https://www.mspring.org/</a></p><p>来看看客户端的样子吧<br><img src="https://raw.githubusercontent.com/mceto/blog/master/img/hexoclient.png" alt=""></p><p>工具支持配置七牛云的图床，是不是很棒。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mceto/blog/master/banner/banner20181222.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;添加了一个分类：word,做一个关键词分享。&lt;/p&gt;
&lt;p&gt;本地整理了很多，大多数都是从别处摘抄的。。。就添加这个分类，根据一个关键词，记一些日常生活中比较实用的东西。&lt;/p&gt;
&lt;p&gt;以后有原创的东西会第一时间发布在自己的博客上。&lt;br&gt;
    
    </summary>
    
      <category term="word" scheme="http://blog.mceto.com/categories/word/"/>
    
    
      <category term="tool" scheme="http://blog.mceto.com/tags/tool/"/>
    
      <category term="word" scheme="http://blog.mceto.com/tags/word/"/>
    
      <category term="hexo" scheme="http://blog.mceto.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hive</title>
    <link href="http://blog.mceto.com/2018/12/12/hive/"/>
    <id>http://blog.mceto.com/2018/12/12/hive/</id>
    <published>2018-12-12T13:38:07.000Z</published>
    <updated>2018-12-22T12:34:48.773Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://raw.githubusercontent.com/mceto/blog/master/banner/banner20181216.png" alt=""></p><h2 id="Hive"><a href="#Hive" class="headerlink" title="Hive"></a>Hive</h2><ul><li>📋介绍：基于hadoop的数据仓库工具，通俗讲可以把结构化的文本文件映射成一张数据库表，并提供类SQL查询功能</li><li>🧠本质：将SQL转换为MapReduce程序</li><li>🚗用途：做离线数据分析</li></ul><a id="more"></a><h2 id="Hive-SQL"><a href="#Hive-SQL" class="headerlink" title="Hive SQL"></a>Hive SQL</h2><blockquote><p>推荐数据库连接工具：<a href="https://dbeaver.io/download/" target="_blank" rel="noopener">DBeaver</a>,可以连接hadoop的hive数据库及各种数据库<br>推荐书籍：《离线和实时大数据开发实战》 –朱松岭</p></blockquote><h3 id="Hive数据库"><a href="#Hive数据库" class="headerlink" title="Hive数据库"></a>Hive数据库</h3><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--语法</span></span><br><span class="line"><span class="keyword">CREATE</span> (<span class="keyword">DATABASE</span>|<span class="keyword">SCHEMA</span>) [ <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> ] database_name</span><br><span class="line">[ <span class="keyword">COMMENT</span> database_name ]</span><br><span class="line">[ LOCATION hdfs_path ]</span><br><span class="line">[ <span class="keyword">WITH</span> DBPROPERTIES (Property_name=property <span class="keyword">value</span> , ...) ];</span><br><span class="line"></span><br><span class="line">ex: <span class="keyword">create</span> <span class="keyword">database</span> demo;</span><br></pre></td></tr></table></figure><h4 id="显示所有数据库"><a href="#显示所有数据库" class="headerlink" title="显示所有数据库"></a>显示所有数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</span><br></pre></td></tr></table></figure><h4 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> demo;</span><br></pre></td></tr></table></figure><h1 id="hive默认不允许删除含有表的数据库，若数据库中有表，则使用以下语句删数据库"><a href="#hive默认不允许删除含有表的数据库，若数据库中有表，则使用以下语句删数据库" class="headerlink" title="hive默认不允许删除含有表的数据库，若数据库中有表，则使用以下语句删数据库"></a>hive默认不允许删除含有表的数据库，若数据库中有表，则使用以下语句删数据库</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> demo <span class="keyword">CASCADE</span></span><br></pre></td></tr></table></figure><h4 id="切换数据库"><a href="#切换数据库" class="headerlink" title="切换数据库"></a>切换数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> demo;</span><br></pre></td></tr></table></figure><h4 id="查看数据库信息"><a href="#查看数据库信息" class="headerlink" title="查看数据库信息"></a>查看数据库信息</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">discribe database demo;</span><br></pre></td></tr></table></figure><h3 id="Hive表DDL"><a href="#Hive表DDL" class="headerlink" title="Hive表DDL"></a>Hive表DDL</h3><h4 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> [<span class="keyword">EXTERNAL</span>] <span class="keyword">TABLE</span> [<span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] table_name  </span><br><span class="line">   [(col_name data_type [<span class="keyword">COMMENT</span> col_comment], ...)] <span class="comment">--字段名,类型</span></span><br><span class="line">   [<span class="keyword">COMMENT</span> table_comment]  <span class="comment">--字段描述</span></span><br><span class="line">   [PARTITIONED <span class="keyword">BY</span> (col_name data_type [<span class="keyword">COMMENT</span> col_comment], ...)]  <span class="comment">--分区，数据查询的时候速度更快</span></span><br><span class="line">   [CLUSTERED <span class="keyword">BY</span> (col_name, col_name, ...) [SORTED <span class="keyword">BY</span> (col_name [<span class="keyword">ASC</span>|<span class="keyword">DESC</span>], ...)] <span class="keyword">INTO</span> num_buckets BUCKETS]  <span class="comment">--分桶,根据字段哈希取余数决定放在哪个桶中</span></span><br><span class="line">   [<span class="keyword">ROW</span> <span class="keyword">FORMAT</span> row_format] <span class="comment">--分割符</span></span><br><span class="line">   [<span class="keyword">STORED</span> <span class="keyword">AS</span> file_format] <span class="comment">--字段排序</span></span><br><span class="line">   [LOCATION hdfs_path] <span class="comment">--HDFS地址</span></span><br></pre></td></tr></table></figure><ul><li><p>创建指定分隔符的内表(默认’\001’)</p><ul><li>单一类型的表<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> demo (<span class="keyword">id</span> <span class="built_in">int</span>, <span class="keyword">name</span> <span class="keyword">string</span> ) <span class="keyword">row</span> <span class="keyword">format</span> <span class="keyword">delimited</span> <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'||'</span>;</span><br></pre></td></tr></table></figure></li></ul><p>表数据类型为：<br><code>66||jerry</code><br><code>77||tomas</code></p><ul><li>复杂类型的表1<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> demo (<span class="keyword">name</span> <span class="keyword">string</span>, hobby <span class="built_in">array</span>&lt;<span class="keyword">string</span>&gt; ) </span><br><span class="line"><span class="keyword">row</span> <span class="keyword">format</span> <span class="keyword">delimited</span> <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'\t'</span> </span><br><span class="line">collection items <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'||'</span>;</span><br></pre></td></tr></table></figure></li></ul><p>表数据类型为:<br>​    <code>jerry    movie||game||music</code><br>​    <code>tomas    movie||code||basketball</code></p><ul><li>复杂类型的表2<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> demo (<span class="keyword">id</span> <span class="built_in">int</span>, <span class="keyword">name</span> <span class="keyword">string</span>, hobby_score <span class="keyword">map</span>&lt;<span class="keyword">string</span>, <span class="built_in">int</span>&gt;) </span><br><span class="line"><span class="keyword">row</span> <span class="keyword">format</span> <span class="keyword">delimited</span> <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'\t'</span></span><br><span class="line">collection items <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'||'</span></span><br><span class="line"><span class="keyword">map</span> <span class="keyword">keys</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">':'</span>;</span><br></pre></td></tr></table></figure></li></ul><p>表数据类型为：<br>​    <code>66    jerry    movie:5||game:5||music:4</code><br>​    <code>77    tomas    movie:4||game:5||basketball:3</code></p><h4 id="创建外表"><a href="#创建外表" class="headerlink" title="创建外表"></a>创建外表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">external</span> <span class="keyword">table</span> demo_ext(<span class="keyword">id</span> <span class="built_in">int</span>, <span class="keyword">name</span> <span class="keyword">string</span>, hobby <span class="keyword">string</span>) <span class="keyword">row</span> <span class="keyword">format</span> <span class="keyword">delimited</span> <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'||'</span>;</span><br></pre></td></tr></table></figure></li></ul><h4 id="复制表-复制表结构，不复制数据"><a href="#复制表-复制表结构，不复制数据" class="headerlink" title="复制表(复制表结构，不复制数据)"></a>复制表(复制表结构，不复制数据)</h4>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> demo_copy <span class="keyword">like</span> demo;</span><br><span class="line">`</span><br></pre></td></tr></table></figure><h4 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h4><ul><li><p>修改表名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> demo_old <span class="keyword">rename</span> <span class="keyword">to</span> demo_new;</span><br></pre></td></tr></table></figure></li><li><p>修改表列名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> demo <span class="keyword">change</span> old_col new_col;</span><br></pre></td></tr></table></figure></li><li><p>添加列名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> demo <span class="keyword">add</span> <span class="keyword">columns</span> (newcol <span class="built_in">int</span> <span class="keyword">comment</span> <span class="string">'这是新列的描述'</span>)</span><br></pre></td></tr></table></figure></li></ul><h4 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h4><ul><li><p>删除表的数据和元数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> demo;</span><br></pre></td></tr></table></figure></li><li><p>只删除表数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> demo;</span><br></pre></td></tr></table></figure></li></ul><h4 id="插入表数据"><a href="#插入表数据" class="headerlink" title="插入表数据"></a>插入表数据</h4><ul><li><p>向表中加载数据</p><blockquote><p>数据库：hive</p><blockquote><p>本地日志文件路径：/usr/local/openresty/nginx/logs/toupload/user_defined.log.2018*<br>HDFS路径：hdfs://user/hive/warehouse/hive.db/</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; --LOAD语法</span><br><span class="line">&gt; LOAD DATA </span><br><span class="line">&gt; [LOCAL]  -- 若为本地路径加local,hdfs路径不加</span><br><span class="line">&gt; INPATH 'filepath' --文件路径</span><br><span class="line">&gt; [OVERWRITE] --是否覆盖</span><br><span class="line">&gt; INTO TABLE tablename [PARTITION(col=value,col_1=value_1...)]</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote></blockquote><blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; --在hive数据库中中创建自定义分区ymd的表</span><br><span class="line">&gt; create table userlog (msec string,remote_addr string,status int,body_bytes_sent string,u_domain string,u_url string,u_title string,u_referrer string,u_sh string,u_sw string,u_cd string,u_lang string,http_user_agent string,u_account string,u_avalue string,u_type0 string,u_type1 string,u_type2 string) </span><br><span class="line">&gt; partitioned by (ymd string) </span><br><span class="line">&gt; row format delimited fields terminated by '||';</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote></li></ul><p>–装载某一天的数据<br>load data local inpath ‘/usr/local/openresty/nginx/logs/toupload/user_defined.log.20181209*’ into table userlog partition (ymd=’20181209’);<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 若日志文件已经映射到HDFS上</span><br><span class="line">&gt; HDFS日志路径:hdfs://flume/tailout/18-12-09/</span><br><span class="line">```SQL</span><br><span class="line">load data inpath &apos;/flume/tailout/18-12-09/*&apos; into table userlog partition (ymd=&apos;20181209&apos;);</span><br></pre></td></tr></table></figure></p><ul><li>将查询结果插入到Hive表中(HDFS文件系统)<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--insert语法</span></span><br><span class="line"><span class="keyword">INSERT</span> </span><br><span class="line">[<span class="keyword">INTO</span>:OVERWRITE]  <span class="comment">--into:追加插入到表中。overwrite:覆盖表数据</span></span><br><span class="line"><span class="keyword">TABLE</span> demo</span><br><span class="line">select_statement...</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建结果表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> userlogresult(timesec <span class="keyword">string</span>,ip <span class="keyword">string</span>) </span><br><span class="line">partitioned <span class="keyword">by</span> (ymd <span class="keyword">string</span>) </span><br><span class="line"><span class="keyword">row</span> <span class="keyword">format</span> <span class="keyword">delimited</span> <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'||'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--开启动态分区</span></span><br><span class="line"><span class="keyword">set</span> hive.exec.dynamic.partition=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">set</span> hive.exec.dynamic.partition.mode=nonstrict;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将userlog表查询的结果插入到userlogresult表中</span></span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> userlogresult <span class="keyword">partition</span> (ymd)</span><br><span class="line"><span class="keyword">select</span> mesec <span class="keyword">as</span> timesec,remote_addr <span class="keyword">as</span> ip,ymd <span class="keyword">from</span> userlog;</span><br></pre></td></tr></table></figure><h3 id="Hive表DML"><a href="#Hive表DML" class="headerlink" title="Hive表DML"></a>Hive表DML</h3><p>额…众所周知，表查询是最艰难的，下一章再单独做总结吧</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mceto/blog/master/banner/banner20181216.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Hive&quot;&gt;&lt;a href=&quot;#Hive&quot; class=&quot;headerlink&quot; title=&quot;Hive&quot;&gt;&lt;/a&gt;Hive&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;📋介绍：基于hadoop的数据仓库工具，通俗讲可以把结构化的文本文件映射成一张数据库表，并提供类SQL查询功能&lt;/li&gt;
&lt;li&gt;🧠本质：将SQL转换为MapReduce程序&lt;/li&gt;
&lt;li&gt;🚗用途：做离线数据分析&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="BigData" scheme="http://blog.mceto.com/categories/BigData/"/>
    
    
      <category term="Big Data" scheme="http://blog.mceto.com/tags/Big-Data/"/>
    
      <category term="hive" scheme="http://blog.mceto.com/tags/hive/"/>
    
  </entry>
  
  <entry>
    <title>如何利用Hexo、GitHub免费搭建属于自己的博客网站</title>
    <link href="http://blog.mceto.com/2018/11/26/hexo/"/>
    <id>http://blog.mceto.com/2018/11/26/hexo/</id>
    <published>2018-11-26T15:26:26.000Z</published>
    <updated>2018-11-30T17:47:46.242Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://raw.githubusercontent.com/mceto/blog/master/banner/banner20181127.png" alt=""></p><p>👉👉👉<a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">GitHub</a><br>👉👉👉<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a><br>👉👉👉<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">Hexo食用指南</a><br>👉👉👉<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">next主题</a><br>👉👉👉<a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a><br><a id="more"></a></p><h2 id="参观一下吧"><a href="#参观一下吧" class="headerlink" title="参观一下吧"></a>参观一下吧</h2><p>👉👉👉<a href="https://asdfv1929.github.io/" target="_blank" rel="noopener">asdfv1929</a> 👈👈👈<br>👉👉👉<a href="https://morefox.net/post/note-a-5" target="_blank" rel="noopener">morefox</a> 👈👈👈<br>👉👉👉<a href="http://shenzekun.cn/hexo的next主题个性化配置教程.html" target="_blank" rel="noopener">shenzekun</a> 👈👈👈</p><h2 id="搭建Hexo博客"><a href="#搭建Hexo博客" class="headerlink" title="搭建Hexo博客"></a>搭建Hexo博客</h2><p>​    按照官方的文档其实已经可以把Hexo博客搭的差不多了，但第一次搭建的时候多多少少会碰到许多坑，我就把自己的搭建过程先写下来，这样我就可以查阅自己的笔记啦！</p><ol><li>安装好基本的软件git，确保本地有nodejs环境，不懂的可以搜索下，这个教程真的很多。</li><li><p>将GitHub上的Hexo源码下载下来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//下载源码</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/hexojs/hexo</span><br></pre></td></tr></table></figure></li><li><p>执行官方文档的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">//安装</span><br><span class="line">$ npm install hexo-cli -g</span><br><span class="line">//快速开始</span><br><span class="line">$ hexo init blog</span><br><span class="line">//进入blog目录</span><br><span class="line">$ cd blog</span><br><span class="line">//进入blog/node_modules目录下查看是否有以下目录:hexo-deployer-git,若没有输入指令,后面上传到GitHub时会用到该组件</span><br><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line">//启动服务可以看到初始页面</span><br><span class="line">$ hexo server==&gt;$ hexo s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//创建新的文章</span><br><span class="line">$ hexo new &quot;Hello Hexo&quot;==&gt;$ hexo n &quot;Hello Hexo&quot;</span><br><span class="line">//编译</span><br><span class="line">$ hexo generate    ==&gt;    $ hexo g</span><br><span class="line">//部署网站</span><br><span class="line">$ hexo deploy     ==&gt;$ hexo d</span><br><span class="line">//清除文件</span><br><span class="line">$ hexo clean==&gt;$ hexo c</span><br></pre></td></tr></table></figure></li><li><p>修改启动端口为80端口</p><ol><li><p>hexo s -p 80 ，可以暂时修改启动端口</p></li><li><p>修改_config.yml,添加以下配置(推荐)</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure></li><li><p>修改hexo-server中的index.js,位置在blog/node_modules/hexo-server/index.js(不推荐)</p></li></ol></li></ol><h2 id="使用主题-Next为例"><a href="#使用主题-Next为例" class="headerlink" title="使用主题(Next为例)"></a>使用主题(Next为例)</h2><p>同样是再blog目录下,别弄混了，blog目录下有个thems文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>修改_config.yml，搜索theme</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主题</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署网站配置(后面会用到)</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">git@github.com:mceto/mceto.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>然后再$ hexo g    $ hexo s 访问一下看看，是不是画风变的更漂亮了😄😄😄😄😄</p><h2 id="上传部署到GitHub"><a href="#上传部署到GitHub" class="headerlink" title="上传部署到GitHub"></a>上传部署到GitHub</h2><ol><li><p>首先得先创建一个仓库,由于GitHub Page每一个账号就只有一个，所以要想好给自己的博客起什么名字</p><p><img src="https://raw.githubusercontent.com/mceto/blog/master/img/CreateRepository.png" alt="创建仓库"></p></li><li><p>如果需要配置自己的域名CNAME解析的话,进入仓库找到Settings-&gt;Options-&gt;GitHubPages</p><p><img src="https://raw.githubusercontent.com/mceto/blog/master/img/mydomain.png" alt="培植自己的域名"></p></li><li><p>配置ssh key(坑有点多)</p><ol><li><p>首先进如blog目录，还没安装Git的先把Git安装好，这个比cmd好用些，$ hexo d部署时最好使用Git Bash,我尝试过很多次使用cmd，都没部署成功</p></li><li><p>进入C:\Users\用户名\ .ssh 查看是否存在文件id_rsa.pub,有的话邮件文本打开复制里面所有的字符串</p><p>如果没有，打开Git Bash ,输入以下指令生成key文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱地址（GitHub地址）&quot;</span><br><span class="line">输入密码后就会生成key文件</span><br></pre></td></tr></table></figure></li><li><p>添加ssh key到GitHub中</p><p>我这里使用的是仓库的ssh key</p><p><img src="https://raw.githubusercontent.com/mceto/blog/master/img/addsshkey.png" alt="add key"></p></li><li><p>在Git Bash中输入$ hexo d 尝试部署博客，这样就差不多吧博客的雏形搭建好了，</p><p>可以访问一下自己的博客地址</p><p><a href="https://mceto.github.io" target="_blank" rel="noopener">https://mceto.github.io</a></p><p>如果配置了域名解析</p><p><a href="https://blog.mceto.com">https://blog.mceto.com</a></p></li></ol></li></ol><h2 id="博客的评论系统"><a href="#博客的评论系统" class="headerlink" title="博客的评论系统"></a>博客的评论系统</h2><p>​    在这里我推荐大家可以去看看另外一位博主的博客文章，我的评论系统就是参考的他的完成的，内容详细</p><p>​    博客地址：<a href="https://11.tt/posts/2018/add-valine-to-your-blog/" target="_blank" rel="noopener">https://11.tt/posts/2018/add-valine-to-your-blog/</a></p><hr><p>好了，今天花了一些时间把自己做博客的过程整理了一下，自己看起来还是挺乱的，有哪里不对或者有什么疑问的欢迎大家在下面留言，以后继续加油！！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mceto/blog/master/banner/banner20181127.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;👉👉👉&lt;a href=&quot;https://github.com/hexojs/hexo&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;&lt;br&gt;👉👉👉&lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;&lt;br&gt;👉👉👉&lt;a href=&quot;http://theme-next.iissnan.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo食用指南&lt;/a&gt;&lt;br&gt;👉👉👉&lt;a href=&quot;https://github.com/theme-next/hexo-theme-next&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;next主题&lt;/a&gt;&lt;br&gt;👉👉👉&lt;a href=&quot;https://valine.js.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Valine&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://blog.mceto.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://blog.mceto.com/tags/hexo/"/>
    
      <category term="blog" scheme="http://blog.mceto.com/tags/blog/"/>
    
      <category term="next" scheme="http://blog.mceto.com/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>hello world</title>
    <link href="http://blog.mceto.com/2018/11/26/hello-world/"/>
    <id>http://blog.mceto.com/2018/11/26/hello-world/</id>
    <published>2018-11-26T08:30:29.000Z</published>
    <updated>2018-11-30T16:41:08.970Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://raw.githubusercontent.com/mceto/blog/master/banner/banner20181126.png" alt=""></p><p>​    第一次写博客，标题也不知道该取什么名字，作为一个从事计算机行业的人，先国际惯例吧。</p><a id="more"></a><p>​    今天花了一上午的时间，总算是把这个博客的雏形弄了出来，期间参考了许多前辈的博客，着实遇到了不少的坑，但只要静下心来，问题还是可以解决的。</p><p>​    脑子里比较乱，有很多语言在脑子里翻滚，却不知道该写些什么好。</p><h3 id="谈一谈写博客的好处吧"><a href="#谈一谈写博客的好处吧" class="headerlink" title="谈一谈写博客的好处吧"></a>谈一谈写博客的好处吧</h3><ol><li><p>有助于理清思路，提高自己的思维能力</p><blockquote><p>人不同于动物是因为人会思考，人的思维就像是绳，记忆就像是绳结，绳乱了，卷成一坨，就不好找到自己需要的那个绳结。</p></blockquote></li><li><p>好记性不如烂笔头(敲键盘)</p><blockquote><p>我自己最差的就是记性，鱼的记忆都能有7秒钟，而我可能连3秒都不到。</p><p>现在社会发展的如此飞速，我想除了在校的学生，很少有人会用笔了吧。我基本上每天都对着电脑，拿笔的日子早已不属于我，虽然我字写的确实挺难看的…</p><p>en…还是键盘比较合适我。首先就不需要考虑的事情就是字迹怎么样了，其次就是以后查阅起来也相当方便，现在的编辑器基本上都带有文字查找功能，想要查阅什么也是非常方便的。</p><p>至于写作用的编辑器我用的是当下流行的Typora，用来写markdown文档再好不过了，虽然用这个并没有多久，不是很熟练，但是用的时间长了也会熟悉的。</p></blockquote></li><li><p>记录自己所遇所感所知</p><blockquote><p>就像是写日志一样，把自己所遇见的所看到的写到文档中，记录生活的点点滴滴，与他人分享。</p></blockquote></li><li><p>展示自我</p><blockquote><p>证明你来过这世上，在这个年代生活过。</p><p>虽然现在有很多社交平台，但我很少发说说、朋友圈，基本上就是用来聊天的。我也不知道为什么，反正就是不想发，然而却对博客有着很大的兴趣。</p></blockquote></li></ol><h3 id="给以前做个总结"><a href="#给以前做个总结" class="headerlink" title="给以前做个总结"></a>给以前做个总结</h3><p>​    之前想做博客却没做成，自己懒占了很大一部分原因，担心自己做出来了却不能坚持下去之类的。前段时间想通了，写博客就像是做笔记，写备忘录，发说说，可以弥补自己的记性缺陷，博客不一定要时刻保持更新着，查看过很多大佬的博客，基本上都是隔三岔五的更新一次。</p><p>​    迈出了第一步，感觉挺好！</p><h3 id="写博客主要想干什么"><a href="#写博客主要想干什么" class="headerlink" title="写博客主要想干什么"></a>写博客主要想干什么</h3><p>​    我是计算机专业毕业的，写博客主要是想记录自己学习技术时的过程和所见的问题，就好比这个博客，我也是参考了很多前辈的博客才做了出来，期间自己也踩了很多坑，希望能给其他的人带来一点帮助。</p><p>就先写这么多了，博客还有很多需要完善的地方，慢慢来吧，第一天，仅仅是个开始！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mceto/blog/master/banner/banner20181126.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;​    第一次写博客，标题也不知道该取什么名字，作为一个从事计算机行业的人，先国际惯例吧。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
